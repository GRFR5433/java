import java.util.Random;
import java.util.Scanner;

public class Main {

    // Constantes do jogo
    private static final String[] RACAS = {"Humano", "Elfo", "Anão", "Orc", "Dragão"};
    private static final String[] APTIDOES = {"Guerreiro", "Arqueiro", "Mago", "Ladino"};
    private static final String[] LOCATIONS = {"Vilarejo", "Reino", "Floresta", "Montanha", "Deserto"};
    private static final String[] INVENTARIO = new String[10];
    private static int INVENTARIO_COUNT = 0;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Random random = new Random();

        // Introdução do jogo
        System.out.println("Bem-vindo ao RPG Solo!");

        // Escolher raça
        String racaJogador = escolherRaca(scanner, random);

        // Escolher nome
        String nomeJogador = escolherNome(scanner);

        // Escolher aptidão
        String aptidaoJogador = escolherAptidao(scanner);

        // Determinar local inicial
        String localInicial = determinarLocalInicial(random);

        // Atributos iniciais do jogador
        int forca = 10;
        int defesa = 5;
        int vidaJogador = 30;

        // Personalizar atributos com base na raça e aptidão
        forca += ajustarForca(racaJogador, aptidaoJogador);
        defesa += ajustarDefesa(racaJogador, aptidaoJogador);
        vidaJogador += ajustarVida(racaJogador);

        // Exibir status inicial do personagem
        exibirStatusInicial(nomeJogador, racaJogador, aptidaoJogador, localInicial, forca, defesa, vidaJogador);

        // Interagir com o ambiente inicial
        interagirAmbienteInicial(localInicial);

        // Menu principal
        mostrarMenuPrincipal(scanner, random, forca, defesa, vidaJogador);

        scanner.close();
    }

    private static String determinarLocalInicial(Random random) {
        int indice = random.nextInt(LOCATIONS.length);
        return LOCATIONS[indice];
    }

    private static void interagirAmbienteInicial(String local) {
        System.out.println("\nVocê nasceu em: " + local);
        switch (local) {
            case "Vilarejo":
                System.out.println("O vilarejo é tranquilo e acolhedor. Você encontra moradores amigáveis dispostos a ajudá-lo.");
                adicionarItemInventario("Pão caseiro");
                break;
            case "Reino":
                System.out.println("Você começa no centro de um grande reino, com castelos majestosos e cavaleiros patrulhando as ruas.");
                adicionarItemInventario("Moeda de ouro");
                break;
            case "Floresta":
                System.out.println("Você nasceu em uma floresta densa e misteriosa, cheia de animais e plantas exóticas.");
                adicionarItemInventario("Ervas medicinais");
                break;
            case "Montanha":
                System.out.println("Você nasceu em uma montanha fria e perigosa, mas com uma vista deslumbrante.");
                adicionarItemInventario("Cristal bruto");
                break;
            case "Deserto":
                System.out.println("Você nasceu em um deserto árido. A sobrevivência aqui é um desafio diário.");
                adicionarItemInventario("Cantil com água");
                break;
            default:
                System.out.println("Local desconhecido. Você precisará explorar para descobrir mais.");
                break;
        }
    }

    private static String escolherRaca(Scanner scanner, Random random) {
        System.out.println("Escolha sua raça:");
        for (int i = 0; i < RACAS.length; i++) {
            System.out.println((i + 1) + ". " + RACAS[i]);
        }
        System.out.println("6. Aleatório");
        System.out.print("Digite o número correspondente à sua escolha: ");

        String entrada = scanner.nextLine().trim();

        // Opção aleatória
        if (entrada.equals("6")) {
            int indiceAleatorio = random.nextInt(RACAS.length);
            String racaAleatoria = RACAS[indiceAleatorio];
            System.out.println("Você escolheu 'Aleatório'! Sua raça será: " + racaAleatoria);
            return racaAleatoria;
        }

        try {
            int escolha = Integer.parseInt(entrada);
            if (escolha >= 1 && escolha <= RACAS.length) {
                return RACAS[escolha - 1];
            }
        } catch (NumberFormatException e) {
            // Caso a entrada não seja válida
        }

        System.out.println("Escolha inválida! Você será designado como 'Humano' por padrão.");
        return "Humano";
    }

    private static String escolherNome(Scanner scanner) {
        System.out.print("Digite o nome do seu personagem: ");
        return scanner.nextLine().trim();
    }

    private static String escolherAptidao(Scanner scanner) {
        System.out.println("Escolha sua aptidão:");
        for (int i = 0; i < APTIDOES.length; i++) {
            System.out.println((i + 1) + ". " + APTIDOES[i]);
        }
        System.out.print("Digite o número correspondente à sua escolha: ");

        try {
            int escolha = Integer.parseInt(scanner.nextLine().trim());
            if (escolha >= 1 && escolha <= APTIDOES.length) {
                return APTIDOES[escolha - 1];
            }
        } catch (NumberFormatException e) {
            // Entrada inválida
        }

        System.out.println("Escolha inválida! Sua aptidão será definida como 'Guerreiro' por padrão.");
        return "Guerreiro";
    }

    private static void exibirStatusInicial(String nome, String raca, String aptidao, String local, int forca, int defesa, int vida) {
        System.out.println("\nStatus inicial do personagem:");
        System.out.println("Nome: " + nome);
        System.out.println("Raça: " + raca);
        System.out.println("Aptidão: " + aptidao);
        System.out.println("Local Inicial: " + local);
        System.out.println("Força: " + forca);
        System.out.println("Defesa: " + defesa);
        System.out.println("Vida: " + vida);
        exibirLinha();
    }

    private static int ajustarForca(String raca, String aptidao) {
        int bonus = 0;
        if (raca.equals("Orc")) {
            bonus += 3;
        } else if (raca.equals("Dragão")) {
            bonus += 5;
        }
        if (aptidao.equals("Guerreiro")) {
            bonus += 2;
        }
        return bonus;
    }

    private static int ajustarDefesa(String raca, String aptidao) {
        int bonus = 0;
        if (raca.equals("Anão")) {
            bonus += 3;
        } else if (raca.equals("Elfo")) {
            bonus += 2;
        }
        if (aptidao.equals("Arqueiro")) {
            bonus += 2;
        }
        return bonus;
    }

    private static int ajustarVida(String raca) {
        if (raca.equals("Dragão")) {
            return 10; // Dragões têm mais vida
        }
        return 0;
    }

    private static void adicionarItemInventario(String item) {
        if (INVENTARIO_COUNT < INVENTARIO.length) {
            INVENTARIO[INVENTARIO_COUNT++] = item;
            System.out.println("Você obteve: " + item);
        } else {
            System.out.println("Seu inventário está cheio! Não foi possível adicionar " + item + ".");
        }
    }

    private static void mostrarMenuPrincipal(Scanner scanner, Random random, int forca, int defesa, int vidaJogador) {
        boolean continuar = true;

        while (continuar && vidaJogador > 0) {
            exibirLinha();
            System.out.println("Menu Principal:");
            System.out.println("1. Continuar a aventura (recuperar vida)");
            System.out.println("2. Entrar em uma dungeon");
            System.out.println("3. Ver inventário");
            System.out.println("4. Ver status do jogador");
            System.out.println("5. Sair do jogo");
            System.out.print("Escolha uma opção: ");
            int opcao = scanner.nextInt();
            scanner.nextLine(); // Limpeza do buffer de scanner

            switch (opcao) {
                case 1:
                    vidaJogador = continuarAventura(vidaJogador);
                    break;
                case 2:
                    vidaJogador =  entrarDungeon(forca, defesa, vidaJogador, random);
                    break;
                case 3:
                    exibirInventario(10); // Digamos que o jogador tem 10 de dinheiro
                    break;
                case 4:
                    exibirStatusJogador(forca, defesa, vidaJogador);
                    break;
                case 5:
                    System.out.println("Você saiu do jogo. Até logo!");
                    continuar = false;
                    break;
                default:
                    System.out.println("Opção inválida!");
                    break;
            }
        }

        if (vidaJogador <= 0) {
            System.out.println("Você foi derrotado... Fim de jogo!");
        }
    }

    private static int continuarAventura(int vidaJogador) {
        System.out.println("Você continua sua aventura e encontra um lugar tranquilo para descansar.");
        vidaJogador += 10; // Recupera 10 de vida
        System.out.println("Sua vida foi restaurada para " + vidaJogador + ".");
        return vidaJogador;
    }

    private static int entrarDungeon(int forca, int defesa, int vidaJogador, Random random) {
        System.out.println("Você entra em uma dungeon escura e perigosa...");
        // Implementar lógica de batalha com monstros aleatórios
        // Reduzir vida do jogador se ele for derrotado
        return vidaJogador; // Substituir com a vida atual do jogador
    }

    private static void exibirInventario(int dinheiro) {
        System.out.println("Inventário:");
        for (int i = 0; i < INVENTARIO_COUNT; i++) {
            System.out.println("- " + INVENTARIO[i]);
        }
        if (INVENTARIO_COUNT == 0) {
            System.out.println("Seu inventário está vazio.");
        }
        System.out.println("Dinheiro restante: " + dinheiro);
    }

    private static void exibirStatusJogador(int forca, int defesa, int vidaJogador) {
        System.out.println("Status do jogador:");
        System.out.println("Força: " + forca);
        System.out.println("Defesa: " + defesa);
        System.out.println("Vida: " + vidaJogador);
    }

    private static void exibirLinha() {
        System.out.println("-".repeat(40));
    }
}